file                 =  { SOI ~ (shebang)? ~ ows ~ (import ~ mws)* ~ (story_item ~ mws)* ~ EOI }
shebang              = _{ "#!" ~ (!NEWLINE ~ ANY)* ~ NEWLINE+ }
import               =  { "import" ~ mws ~ text }
story_item           =  { config | character | scene | chapter }
config               =  { "config" ~ mws ~ identifier ~ ows ~ "{" ~ (mws ~ config_item)* ~ mws ~ "}" }
config_item          =  { identifier ~ ows ~ ":" ~ ows ~ value }
character            =  { "character" ~ mws ~ identifier ~ ows ~ "{" ~ (mws ~ character_item)* ~ mws ~ "}" }
character_item       =  { identifier ~ ows ~ ":" ~ ows ~ value }
scene                =  { "scene" ~ mws ~ identifier ~ ows ~ "{" ~ (mws ~ scene_item)* ~ mws ~ "}" }
scene_item           =  { identifier ~ ows ~ ":" ~ ows ~ value }
chapter              =  { "chapter" ~ mws ~ identifier ~ ows ~ "{" ~ (mws ~ chapter_item)* ~ mws ~ "}" }
chapter_item         =  { label | chapter_action }
label                =  { "$" ~ ows ~ identifier ~ ows ~ ":" }
chapter_action       =  { chapter_action_path ~ (mws ~ chapter_action_param)* ~ !chapter_action_param }
chapter_action_path  =  { (identifier ~ ows ~ ".")? ~ ows ~ identifier }
chapter_action_param =  { identifier ~ ows ~ ":" ~ ows ~ value }
bool_true            =  { "true" }
bool_false           =  { "false" }
value                =  { none | text | number | color | bool_true | bool_false | map | array | identifier }
none                 =  { "none" }
color                = _{ "#" ~ color_inner }
color_inner          =  { (ASCII_HEX_DIGIT{2})+ }
number               = @{ ("+" | "-")? ~ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
text                 =  { "\"" ~ text_inner ~ "\"" }
text_inner           = @{ text_char* }
text_char            =  { !("\"" | "\\") ~ ANY | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t") | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4}) }
array                =  { "[" ~ (mws ~ value)* ~ mws ~ "]" }
map                  =  { "{" ~ (mws ~ map_item)* ~ mws ~ "}" }
map_item             =  { identifier ~ ows ~ ":" ~ ows ~ value }
COMMENT              = _{ "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE+ }
identifier           = @{ identifier_start ~ identifier_continue* ~ !identifier_continue }
identifier_start     =  { ASCII_ALPHA | "_" }
identifier_continue  =  { ASCII_ALPHANUMERIC | "_" }
ws                   = _{ " " | "\t" | NEWLINE }
mws                  = _{ ws+ }
ows                  = _{ ws* }
